image:
  repository: ${component.minio.image.name}
  tag: ${component.minio.image.tag}
  pullPolicy: IfNotPresent

mcImage:
  repository: ${component.minio.mc.image.name}
  tag: ${component.minio.mc.image.tag}
  pullPolicy: IfNotPresent

# See: https://docs.minio.io/docs/distributed-minio-quickstart-guide
mode: standalone

## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

mountPath: "/export"
replicas: ${component.minio.replicas}

persistence:
  enabled: true
  storageClass: ${component.minio.storageClass}
  accessMode: ReadWriteOnce
  size: ${component.minio.storageSize}
  subPath: ""

service:
  type: ClusterIP
  clusterIP: ~
  port: ${component.minio.service.port}
  annotations: {}

defaultBucket:
  enabled: ${component.minio.default.bucket.enabled}
  name: ${component.minio.default.bucket.name}
  policy: ${component.minio.default.bucket.policy}

ingress:
  enabled: true
  annotations: {}
  path: /
  hosts:
    - ${component.minio.name}.${component.minio.ingress.baseDomain}

## https://docs.minio.io/docs/minio-bucket-notification-guide
## https://github.com/minio/minio/blob/master/docs/config
minioConfig:
  region: "${component.minio.region}"
  browser: "on"
  domain: ""
  worm: "off"
  storageClass:
    standardStorageClass: "${component.minio.storageClass}"
    reducedRedundancyStorageClass: ""
  # nats:
  #   enable: ${component.minio.nats.enabled}
  #   address: "${component.minio.nats.client.fqdn}"
  #   subject: "${component.minio.nats.subject}"
  #   username: "${component.nats.username}"
  #   password: "${component.nats.password}"
  #   token: ""
  # redis:
  #   enable: ${component.minio.redis.enabled}
  #   format: ${component.minio.redis.format}
  #   address: ${component.redis.host}:${component.redis.port}
  #   password: "${component.redis.password}"
  #   key: ${component.minio.redis.key}
  # postgresql:
  #   enable: ${component.minio.postgresql.enabled}
  #   format: "namespace"
  #   connectionString: "sslmode=disable"
  #   table: "${component.minio.postgresql.table}"
  #   host: "${component.postgresql.host}"
  #   port: "${component.postgresql.port}"
  #   user: "${component.postgresql.user}"
  #   password: "${component.postgresql.password}"
  #   database: "${component.postgresql.database}"
