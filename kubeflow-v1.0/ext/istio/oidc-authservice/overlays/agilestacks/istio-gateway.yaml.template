---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ${component.kubeflow.istio.ingressGateway}
  labels:
    app: ${component.kubeflow.istio.ingressGateway}
    istio: ${component.kubeflow.istio.ingressGateway}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ${component.kubeflow.istio.ingressGateway}
      istio: ${component.kubeflow.istio.ingressGateway}
---
# Source: istio/charts/gateways/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ${component.kubeflow.istio.ingressGateway}-service-account
  labels:
    app: ${component.kubeflow.istio.ingressGateway}
---
apiVersion: v1
kind: Service
metadata:
  name: ${component.kubeflow.istio.ingressGateway}
  labels:
    app: ${component.kubeflow.istio.ingressGateway}
    istio: ${component.kubeflow.istio.ingressGateway}
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
spec:
  type: LoadBalancer
  selector:
    app: ${component.kubeflow.istio.ingressGateway}
    istio: ${component.kubeflow.istio.ingressGateway}
  ports:
    - name: http2
      port: 80
      targetPort: 80
    - name: https
      port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${component.kubeflow.istio.ingressGateway}
  labels:
    app: ${component.kubeflow.istio.ingressGateway}
    istio: ${component.kubeflow.istio.ingressGateway}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${component.kubeflow.istio.ingressGateway}
      istio: ${component.kubeflow.istio.ingressGateway}
  template:
    metadata:
      labels:
        app: ${component.kubeflow.istio.ingressGateway}
        istio: ${component.kubeflow.istio.ingressGateway}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: ${component.kubeflow.istio.ingressGateway}-service-account
      containers:
        - name: istio-proxy
          image: "gcr.io/istio-release/proxyv2:release-1.3-latest-daily"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
          args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level=default:info
          - --drainDuration
          - '45s' #drainDuration
          - --parentShutdownDuration
          - '1m0s' #parentShutdownDuration
          - --connectTimeout
          - '10s' #connectTimeout
          - --serviceCluster
          - ${component.kubeflow.istio.ingressGateway}
          - --zipkinAddress
          - zipkin:9411
          - --proxyAdminPort
          - "15000"
          - --statusPort
          - "15020"
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot:15010
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
            
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SDS_ENABLED
            value: "false"
          - name: ISTIO_META_WORKLOAD_NAME
            value: ${component.kubeflow.istio.ingressGateway}
          - name: ISTIO_META_OWNER
            value: kubernetes://api/apps/v1/namespaces/istio-system/deployments/${component.kubeflow.istio.ingressGateway}
          volumeMounts:
          - name: istio-certs
            mountPath: /etc/certs
            readOnly: true
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.${component.kubeflow.istio.ingressGateway}-service-account
          optional: true
      affinity:      
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "amd64"
                - "ppc64le"
                - "s390x"
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "amd64"
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "ppc64le"
          - weight: 2
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "s390x"      
