---
version: 1
kind: component
meta:
  name: prometheus-operator
  title: Prometheus
  brief: Cluster monitoring
  description: >
    Prometheus is a systems and service monitoring system. It collects metrics from configured targets at
    given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition
    is observed to be true.
  category: Monitoring
  version: 2.5.0
  maturity: ga
  license: Apache 2.0
  source:
    dir: ../../components/prometheus

requires:
  - kubernetes
  - helm
  - tiller

provides:
  - prometheus

parameters:
  - name: component.ingress.ssoFqdn
  - name: component.ingress.protocol
  - name: component.dex.issuer
  - name: dns.domain
    env: DOMAIN_NAME
  - name: terraform.bucket.name
    env: STATE_BUCKET
  - name: terraform.bucket.region
    env: STATE_REGION
  - name: terraform.bucket.container
    empty: allow
    env: STATE_CONTAINER
  - name: cloud.region
    env: AWS_DEFAULT_REGION
  - name: cloud.kind
    env: CLOUD_KIND
  - name: component.ingress.kubernetes.ingressClass
    empty: allow
  - name: component.promoper
    parameters:
    - name: chart
      value: stable/prometheus-operator
      env: HELM_CHART
    - name: chart.version
      value: 8.1.6
      env: CHART_VERSION
    - name:  prometheus.version
      brief: Prometheus version
      value: v2.13.1
    - name:  operator.version
      value: v0.34.0
    - name:  name
      value: prometheus-operator
      env:   COMPONENT_NAME
    - name:  namespace
      brief: Kubernetes namespace to install into
      value: monitoring
      env:   NAMESPACE
    - name:  rbac.enabled
      value: true
    - name:  psp.enabled
      value: true
    - name:  ingress.enabled
      value: true
    - name:  ingress.urlPrefix
      value: prometheus
    - name:  ingress.path
      value: /
    - name: prometheus.replicas
      value: 1
    - name: prometheus.retention
      value: 12h
  - name: component.promoper.alertmanager
    parameters:
    - name:  version
      brief: Alertmanager version
      value: v0.17.0
    - name:  ingress.enabled
      value: true
    - name:  ingress.urlPrefix
      value: alertmanager
    - name:  ingress.path
      value: /
  - name: component.promoper.grafana
    parameters:
    - name:  version
      brief: Grafana version
      value: 6.2.2
    - name:  ingress.enabled
      value: true
    - name:  ingress.urlPrefix
      value: grafana
    - name: adminPassword
      value: asiPromOp3r
    - name: oidcId
      value: grafana-client
    - name: oidcSecret
      value: SDndcn378ddfg4-57yDSDfjeuDVQEW
  - name: component.promoper.thanos
    parameters:
    - name: enabled
      value: false
      env: THANOS_ENABLED
    - name: version
      brief: Thanos version
      value: v0.4.0
    - name: bucket.name
      value: thanos-storage.${dns.domain}
      env: BUCKET_NAME
    - name: iam_user
      value: thanos
      env: IAM_USER
    - name: ingress.urlPrefix
      value: thanos


templates:
  files:
    - thanos/*.template
    - oidc-crd.yaml.template
  extra:
  - kind: mustache
    files:
    - values.yaml.template
    - values-thanos.yaml.template


outputs:
  - name: component.prometheus.url
    brief: Prometheus URL
    value: ${component.ingress.protocol}://${component.promoper.ingress.urlPrefix}.${component.ingress.ssoFqdn}
  - name: component.prometheus.alertmanager_url
    brief: Alertmanager URL
    value: ${component.ingress.protocol}://${component.promoper.alertmanager.ingress.urlPrefix}.${component.ingress.ssoFqdn}
  - name: component.prometheus.grafana_url
    brief: Grafana URL
    value: ${component.ingress.protocol}://${component.promoper.grafana.ingress.urlPrefix}.${component.ingress.ssoFqdn}
