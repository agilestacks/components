#!/bin/bash
# Construct a gitlab registry storage secret using the existing bucket service's component secrets
## expects jq 1.6 or later
## expects to be formatted with mustache, not default/golang

KUBE="kubectl --context={{dns.domain}}"

GITLAB_REGISTRY_BUCKET={{component.gitlab.name}}-registry
BUCKET_INTERNAL_ENDPOINT={{component.bucket.endpoint.internal}}
BUCKET_TMP={{component.bucket.endpoint}}
BUCKET_ENDPOINT=${BUCKET_INTERNAL_ENDPOINT:-BUCKET_TMP}

$KUBE -n {{component.gitlab.namespace}} delete secret gitlab-registry-storage gitlab-rails-storage gitlab-backup-storage || true

SECRETS=$($KUBE -n {{component.bucket.namespace}} get secret {{component.bucket.secret}} -o json | jq '.data | map_values(@base64d)')
BUCKET_ACCESS_KEY=$(echo $SECRETS | jq --raw-output '.accesskey')
BUCKET_SECRET_KEY=$(echo $SECRETS | jq --raw-output '.secretkey')

echo $BUCKET_ACCESS_KEY
# echo $BUCKET_SECRET_KEY

F=$(mktemp)
REGISTRY_SECRET_FILE=$(cat << END > $F
s3:
  bucket: ${GITLAB_REGISTRY_BUCKET}
  accesskey: ${BUCKET_ACCESS_KEY}
  secretkey: ${BUCKET_SECRET_KEY}
  regionendpoint: ${BUCKET_ENDPOINT}
  region: us-east-1
  v4auth: true
END
)

$KUBE -n {{component.gitlab.namespace}} create secret generic gitlab-registry-storage --from-file=config=$F

F=$(mktemp)
RAILS_SECRET_FILE=$(cat << END > $F
# Specify access/secret keys
provider: AWS
aws_access_key_id: ${BUCKET_ACCESS_KEY}
aws_secret_access_key: ${BUCKET_SECRET_KEY}
aws_signature_version: 4
host: ${BUCKET_ENDPOINT}
endpoint: ${BUCKET_ENDPOINT}
END
)

$KUBE -n {{component.gitlab.namespace}} create secret generic gitlab-rails-storage --from-file=connection=$F

F=$(mktemp)
BACKUP_SECRET_FILE=$(cat << END > $F
[default]
host_base = ${BUCKET_ENDPOINT}
host_bucket = ${BUCKET_ENDPOINT}
use_https = False
signature_v2 = False
access_key = ${BUCKET_ACCESS_KEY}
secret_key = ${BUCKET_SECRET_KEY}
enable_multipart = False
END
)

$KUBE -n {{component.gitlab.namespace}} create secret generic gitlab-runner-cache --from-literal=accesskey="${BUCKET_ACCESS_KEY}" --from-literal=secretkey="${BUCKET_SECRET_KEY}"


