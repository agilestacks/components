---
version: 1
kind: component
meta:
  name: gitlab-cn
  brief: Cloud-Native, multi-pod deployment of Gitlab
  version: 12.1.4
  maturity: stable
  license: MIT
  source:
    dir: ../../components/gitlab-cn

requires:
  - kubernetes
  - helm
  - tiller

provides:
  - gitlab

parameters:
  - name: cloud.kind
    env: CLOUD_KIND
  - name: dns.domain
    env: DOMAIN_NAME
  - name: dns.name
  - name: cloud.azureResourceGroupName
    empty: allow
  - name: component.ingress.kubernetes.ingressClass
    empty: allow
  - name: component.ingress.protocol
    env: PROTOCOL
  - name: component.acm.certificateArn
    empty: allow
    env: ACM_CERTIFICATE_ARN
  - name: component.tls.kind
    value: letsencrypt
    env: TLS_KIND
    empty: allow
  - name: component.gitlab
    parameters:
    - name: chart
      value: gitlab
      env: HELM_CHART
    - name: repo
      value: https://charts.gitlab.io
      env: HELM_REPO
    - name: chart.version
      value: 2.1.6
      env: CHART_VERSION
    - name:  name
      value: gitlab-cn
      env:   COMPONENT_NAME
    - name: edition
      value: ce
    - name:  namespace
      brief: Kubernetes namespace to install into
      value: gitlab
      env:   NAMESPACE
    - name:  software.version
      brief: Gitlab Version
      value: 12.1.4
    - name:  rbac.enabled
      value: true
    - name:  psp.enabled
      value: true
    - name:  ingress.enabled
      value: true
    - name:  ingress.path
      value: /
    - name: serviceaccount.username
      value: ""
      empty: allow
      env: GITLAB_SERVICEACCOUNT
    - name: serviceaccount.password
      value: ""
      empty: allow
      env: GITLAB_SERVICEACCOUNT_PASS
    - name: fqdn
      value: gitlab.${dns.domain}
    - name: registry.fqdn
      value: registry.${dns.domain}
    - name: url
      value: ${component.ingress.protocol}://${component.gitlab.fqdn}
      env: GITLAB_URL
    - name: registryUrl
      value: ${component.ingress.protocol}://${component.gitlab.registry.fqdn}
    - name: omniauth
      parameters:
      - name: provider.name
        value: okta
      - name: identifier
        value: gitlab-client
      - name: secret
        value: dpKSSpLzY3pt-QZvmKjccmm8A
      - name: callback.url
        value: ${component.gitlab.url}/users/auth/${component.gitlab.omniauth.provider.name}/callback
  - name: component.dex.issuer
  - name: component.minio.secret
  - name: component.bucket
    parameters:
    - name: namespace
    - name: name
    - name: accessKey
    - name: secretKey
    - name: endpoint

templates:
  files:
    - "*.template"
    - "aws/*/*.yaml.template"
  extra:
    - kind: mustache
      files:
        - "scripts/*.template"
        - "aws/*.yaml.template"
        - "aws/*.sh.template"
        - "azure/*.yaml.template"
        - "azure/*.sh.template"
        - "gcp/*.yaml.template"
        - "gcp/*.sh.template"
outputs:
  - name: component.gitlab.url
    brief: Gitlab URL
    value: ${component.gitlab.url}
  - name: component.gitlab.server.url
    brief: Gitlab URL
    value: ${component.gitlab.url}/api/v4
  - name: component.gitlab.registryUrl
    brief: Gitlab Registry URL
    value: ${component.gitlab.registryUrl}
  - name: component.gitlab.namespace
    value: apps
    brief: Gitlab default group
  - name: component.gitlab.token
    fromTfVar: serviceaccount_token