kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: ${component.kubernetes-dashboard.name}
  name: ${component.kubernetes-dashboard.name}
  namespace: ${component.kubernetes-dashboard.namespace}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: ${component.kubernetes-dashboard.name}
  template:
    metadata:
      labels:
        k8s-app: ${component.kubernetes-dashboard.name}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      priorityClassName: system-cluster-critical
      containers:
      - name: ${component.kubernetes-dashboard.name}
        image: gcr.io/google_containers/kubernetes-dashboard-amd64:${component.kubernetes-dashboard.version}
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 100Mi
        ports:
        - containerPort: 9090
          protocol: TCP
        args:
          # Uncomment the following line to manually specify Kubernetes API server Host
          # If not specified, Dashboard will attempt to auto discover the API server and connect
          # to it. Uncomment only if the default does not work.
          # - --apiserver-host=http://my-address:port
          - --disable-settings-authorizer=true
        volumeMounts:
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: tmp-volume
        emptyDir: {}
      serviceAccountName: ${component.kubernetes-dashboard.name}
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: "CriticalAddonsOnly"
        operator: "Exists"
