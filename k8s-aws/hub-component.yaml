---
version: 1
kind: component
meta:
  name: k8s-aws
  brief: stack-k8s-aws adapter
  source:
    dir: ../../components/k8s-aws

requires:
  - kubernetes
provides:
  - kubernetes

lifecycle:
  readyConditions:
    - dns: ${kubernetes.api.endpoint}
      url: https://${kubernetes.api.endpoint}/api/v1

parameters:
  - name: dns.domain
    env: DOMAIN_NAME
  - name: kubernetes.api.endpoint
    value: api.${dns.domain}
  - name: kubernetes.api.namespace
    value: kube-system
  - name: kubernetes.api.caCert
  - name: kubernetes.api.clientCert
  - name: kubernetes.api.clientKey

outputs:
  - name: dns.domain
  - name: dns.name
    fromTfVar: dns_name
  - name: dns.baseDomain
    fromTfVar: dns_base_domain
  - name: cloud.bucket
    value: files.${dns.domain}

  - name: cloud.vpc.id
    fromTfVar: vpc
  - name: cloud.vpc.cidr
    fromTfVar: vpc_cidr_block

  - name: kubernetes.api.endpoint
  - name: kubernetes.api.caCert
  - name: kubernetes.api.clientCert
  - name: kubernetes.api.clientKey

  # - name: component.ingress.elb
  #   fromTfVar: elb_domain
  # - name: component.ingress.protocol
  #   fromTfVar: ingress_protocol
  # - name: component.ingress.fqdn
  #   fromTfVar: ingress_fqdn
  # - name: component.ingress.ssoFqdn
  #   fromTfVar: sso_ingress_fqdn
  # - name: component.ingress.ssoUrlPrefix
  #   fromTfVar: sso_url_prefix

templates:
  files:
    - "*.template"
