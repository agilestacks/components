---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${component.ingress.name}
  labels:
    app: traefik2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: traefik2
    spec:
      serviceAccountName: ${component.ingress.name}
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:${component.traefik.app.version}
        name: traefik2
        resources:
        readinessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        ports:
        - name: "traefik"
          containerPort: 9000
          protocol: TCP
        - name: "web"
          containerPort: 8000
          protocol: TCP
        - name: "websecure"
          containerPort: 8443
          protocol: TCP
        args:
        - "--entryPoints.traefik.address=:9000"
        - "--entryPoints.web.address=:8000"
        - "--entryPoints.websecure.address=:8443"
        - "--api.dashboard=${component.ingress.dashboard.enabled}"
        - "--ping=true"
        - "--log.level=INFO"
        - "--certificatesresolvers.prod.acme.tlschallenge"
        - "--certificatesresolvers.prod.acme.email=${component.cert-manager.issuerEmail}"
        - "--certificatesresolvers.prod.acme.storage=/acme/prod.json"
        - "--certificatesresolvers.staging.acme.tlschallenge"
        - "--certificatesresolvers.staging.acme.email=${component.cert-manager.issuerEmail}"
        - "--certificatesresolvers.staging.acme.storage=/acme/staging.json"
        - "--certificatesresolvers.staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
        - "--providers.file.directory=/config"
        - "--providers.kubernetescrd"
        - "--providers.kubernetesingress"
        - "--providers.kubernetesingress.namespaces=${component.traefik.kubernetes.namespaces}"
        - "--providers.kubernetesingress.labelSelector=${component.traefik.kubernetes.labelSelector}"
        - "--providers.kubernetesingress.ingressClass=${component.traefik.kubernetes.ingressClass}"
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /acme
          name: acme
      volumes:
      - name: config
        configMap:
          name: ${component.ingress.name}
      - name: acme
        persistentVolumeClaim:
          claimName: ${component.ingress.name}-acme

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: traefik
#   labels:
#     app: traefik
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: traefik
#   template:
#     metadata:
#       labels:
#         app: traefik
#     spec:
#       serviceAccountName: traefik
#       terminationGracePeriodSeconds: 60
#       containers:
#       - image: traefik:1.7.19
#         name: traefik
#         resources:
#           limits:
#             cpu: 0
#             memory: 0
#           requests:
#             cpu: 0
#             memory: 0
#         readinessProbe:
#           tcpSocket:
#             port: 80
#           failureThreshold: 1
#           initialDelaySeconds: 10
#           periodSeconds: 10
#           successThreshold: 1
#           timeoutSeconds: 2
#         livenessProbe:
#           tcpSocket:
#             port: 80
#           failureThreshold: 3
#           initialDelaySeconds: 10
#           periodSeconds: 10
#           successThreshold: 1
#           timeoutSeconds: 2
#         args:
#         - --configfile=/config/traefik.toml
#         env:
#         - name: AWS_REGION
#           valueFrom:
#             secretKeyRef:
#               name: traefik-dnsprovider-config
#               key: AWS_REGION
#         ports:
#         - name: http
#           containerPort: 80
#           protocol: TCP
#         - name: httpn
#           containerPort: 8880
#           protocol: TCP
#         - name: https
#           containerPort: 443
#           protocol: TCP
#         - name: dash
#           containerPort: 8080
#           protocol: TCP
#         volumeMounts:
#         - mountPath: /config
#           name: config
#         - mountPath: /ssl
#           name: ssl
#         - mountPath: /acme
#           name: acme
#       volumes:
#       - name: config
#         configMap:
#           name: traefik
#       - name: ssl
#         secret:
#           secretName: traefik-default-cert
#       - name: acme
#         persistentVolumeClaim:
#           claimName: traefik-acme
