apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgresql
  labels:
    provider:  agilestacks.com
    project:   postgresql
    qualifier: postgresql
spec:
  template:
    metadata:
      labels:
        provider:  agilestacks.com
        project:   postgresql
        qualifier: postgresql
    spec:
      containers:
      - name: postgresql
        image: "postgres:9.6.2"
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgresql-config
              key: user
          # Required for pg_isready in the health probes.
        - name: PGUSER
          valueFrom:
            configMapKeyRef:
              name: postgresql-config
              key: user
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgresql-config
              key: db
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secrets
              key: password
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/postgresql/data/pgdata
          readOnly: false
      - name: metrics
        image: "wrouesnel/postgres_exporter:v0.1.1"
        imagePullPolicy: Always
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://postgresql@127.0.0.1:5432?sslmode=disable
        ports:
        - name: metrics
          containerPort: 9187
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: postgresql-data-volume
