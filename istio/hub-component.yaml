---
version: 1
kind: component
meta:
  name: istio
  title: Istio
  brief: Service mesh
  description: >-
    Service mesh for providing a uniform way
    to integrate microservices, manage traffic
    flow across microservices, enforce
    policies and aggregate telemetry data.
    Automatically integrates with Prometheus component
    (configures scraping jobs, sets up Grafana dashboards
    to display various Istio metrics).
  category: Networking
  version: 1.5.0
  maturity: beta
  license: Apache 2.0
  source:
    dir: ../../components/istio

requires:
  - aws
  - kubernetes
  - helm
  - tiller

provides:
  - istio

parameters:
  - name: dns.domain
    env: DOMAIN_NAME
  - name: component.ingress.protocol
  - name: component.ingress.fqdn
  - name: component.ingress.ssoFqdn
  - name: component.ingress.staticIp
    empty: allow
    env: TF_VAR_ingress_static_ip
  - name: component.ingress.staticHost
    empty: allow
    env: TF_VAR_ingress_static_host
  - name: cloud.kind
    env: CLOUD_KIND
  - name: terraform.bucket.region
    env: STATE_REGION
  - name: terraform.bucket.name
    env: STATE_BUCKET
  - name: component.prometheus
    parameters:
      - name: namespace
        env: PROMETHEUS_NAMESPACE
        value: monitoring
      - name: name
        env: PROMETHEUS_NAME
        value: prometheus-operator
      - name: addr
        value: http://${component.prometheus.name}-prometheus.${component.prometheus.namespace}.svc.cluster.local:9090
        env: PROMETHEUS_ADDR

  - name: component.cert-manager.defaultIssuerName
  - name: component.cert-manager.defaultIssuerKind

  - name: component.istio
    parameters:
      - name: name
        value: istio
        env: COMPONENT_NAME
      - name: namespace
        value: istio-system
        env: NAMESPACE
      - name: version.release
        value: 1.5.0
        env: ISTIO_VERSION
      - name: tracing.enabled
        value: false
      - name: grafana.enabled
        value: false
      - name: ingressGateway
        brief: Links a Gateway resource to current istio (`spec.selector.istio`)
        value: ingressgateway
      - name: sidecarInjectorWebhook.enabled
        value: true
      - name: kiali
        parameters:
          - name: enabled
            value: true
          - name: urlPrefix
            value: istio-kiali
          - name: auth.strategy
            value: anonymous
          - name: createDemoSecret
            value: '#{component.istio.kiali.auth.strategy == "login" ? "true" : "false"}'

outputs:
  - name: component.istio.kiali.url
    brief: Istio Service Graph
    value: ${component.ingress.protocol}://${component.istio.kiali.urlPrefix}.${component.ingress.ssoFqdn}
  - name: component.istio.namespace
  - name: component.istio.ingressGateway
    brief: Used to link a Gateway resource to current istio (`spec.selector.istio`)

templates:
  files:
    - "prometheus-config/*.template"
    - "*.template"
