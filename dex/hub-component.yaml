---
version: 1
kind: component
meta:
  name: dex
  title: Dex
  brief: Dex OIDC and OAuth2 provider
  description: >
    Dex is an identity service that uses OpenID Connect to drive authentication
    for other apps. Dex is NOT a user-management system, but acts as a portal
    to other identity providers through "connectors";
    This lets dex defer authentication to LDAP servers, SAML providers,
    or established identity providers like GitHub, Google, and Active Directory.
    Clients write their authentication logic once to talk to dex,
    then dex handles the protocols for a given backend.
  category: Edge Proxy
  version: 2.33.0
  maturity: ga
  license: Apache 2.0
  source:
    dir: ../../components/dex

requires:
- aws
- azure
- gcp
- kubernetes

provides:
- dex

parameters:
- name: dns.domain
  env: DOMAIN_NAME
- name: terraform.bucket.name
  env: STATE_BUCKET
- name: terraform.bucket.region
  env: STATE_REGION
- name: terraform.bucket.container
  empty: allow
  env: STATE_CONTAINER
- name: cloud.kind
  env: CLOUD_KIND
- name: cloud.region
  env: AWS_DEFAULT_REGION
- name: cloud.azureResourceGroupName
  value: superhub-${cloud.region}
  env: TF_VAR_azure_resource_group_name
- name: cloud.gcpProjectId
  empty: allow
  env: TF_VAR_gcp_project_id

- name: component.ingress
  parameters:
  - name: ssoUrlPrefix
  - name: protocol
  - name: fqdn
  - name: kubernetes.ingressClass
    empty: allow
  - name: kubernetes.publicIngressClass
    empty: allow
  - name: loadBalancer
    env: TF_VAR_load_balancer
  - name: loadBalancerDnsRecordType
    value: '#{matches(component.ingress.loadBalancer, r"^[\d.]+$") ? "A" : "CNAME"}'
    env: TF_VAR_load_balancer_dns_record_type

- name: component.dex
  parameters:
  # this should be set to unique value per deployment
  - name: secret
    value: noh4oiB5eiRai8av
  - name: name
    value: dex
    env: COMPONENT_NAME
  - name: namespace
    brief: Kubernetes namespace to install into
    value: kube-system
    env: NAMESPACE
  - name: urlPrefix
    value: auth
    env: TF_VAR_url_prefix
  - name: oidcIssuerFqdn
    value: ${component.dex.urlPrefix}.${dns.domain}
  - name: issuer
    value: ${component.ingress.protocol}://${component.dex.oidcIssuerFqdn}
  # predefined static client for in-stack integration
  - name: oidc.client
    value: in-cluster-static-client
  - name: oidc.secret
    value: ${component.dex.secret}
  - name: image
    value: dexidp/dex:v2.33.0

  - name: okta
    empty: allow
    parameters:
      - name: issuer
      - name: clientId
      - name: clientSecret
  - name: microsoft
    empty: allow
    parameters:
      - name: clientId
      - name: clientSecret
      - name: tenant
      - name: groups
  - name: google
    empty: allow
    parameters:
      - name: clientId
      - name: clientSecret
      - name: serviceAccountFile
      - name: adminEmail
  - name: passwordDb
    empty: allow
    parameters:
      - name: email
      - name: password

  - name: authproxy.image
    value: bitnami/oauth2-proxy:7
  - name: authOperator.image
    value: agilestacks/auth-operator:0.3.0
  - name: authproxy.emailDomain
    value: "'*'"
  - name: authproxy.cookieExpire
    value: "'20h0m0s'"

outputs:
- name: component.dex.namespace
- name: component.dex.issuer
- name: component.dex.secret
- name: component.dex.oidc.client
- name: component.dex.oidc.secret

templates:
  files:
  - "kubernetes/*.template"
  extra:
  - kind: go
    files:
    - "kubernetes/*.gotemplate"
