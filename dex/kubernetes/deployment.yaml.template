apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  namespace: ${component.dex.namespace}
  labels:
    provider:  agilestacks.com
    project:   dex
    component: dex
spec:
  replicas: 1
  # New dex pods must be healthy for 30 seconds
  # before they're marked as ready.
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      # During a rolling update every deployed pod must be
      # ready before the update terminates an existing pod.
      maxUnavailable: 0
  selector:
    matchLabels:
      component: dex
  template:
    metadata:
      name: dex
      labels:
        provider:  agilestacks.com
        project:   dex
        component: dex
    spec:
      serviceAccountName: dex
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
      - name: dex-grpc-server-secret
        secret:
          secretName: dex-grpc-server-secret
      containers:
      - name: dex
        imagePullPolicy: Always
        image: ${component.dex.image}
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/config.yaml"]
        volumeMounts:
        - name: config
          mountPath: /etc/dex
        - name: dex-grpc-server-secret
          mountPath: /etc/dex-grpc-server-secret
          readOnly: true
        ports:
        - containerPort: 5556
          protocol: TCP
        - containerPort: 5557
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5556
          initialDelaySeconds: 5
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 100m
            memory: 200Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
