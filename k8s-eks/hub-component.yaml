---
version: 1
kind: component
meta:
  name: k8s-eks
  brief: EKS adapter
  source:
    dir: ../../components/k8s-eks

requires:
  - kubectl
provides:
  - kubernetes

lifecycle:
  readyConditions:
    - dns: ${kubernetes.api.endpoint}
      url: https://${kubernetes.api.endpoint}/api/v1
  options:
    random:
      bytes: 1536

parameters:
  - name: dns.domain
    env: DOMAIN_NAME

  - name: kubernetes.api.endpoint
    env: TF_VAR_api_endpoint
  - name: kubernetes.api.namespace
    value: kube-system
  - name: kubernetes.api.caCert
  - name: kubernetes.flavor
    value: eks
  - name: kubernetes.eks.cluster

  - name: terraform.bucket.name
    env: STATE_BUCKET
  - name: terraform.bucket.region
    env: STATE_REGION

outputs:
  - name: dns.domain
  - name: dns.name
    fromTfVar: dns_name
  - name: dns.baseDomain
    fromTfVar: dns_base_domain

  - name: cloud.region
    fromTfVar: region
  - name: cloud.availabilityZone
    fromTfVar: zone

  - name: cloud.vpc.id
    fromTfVar: vpc
  - name: cloud.vpc.cidr
    fromTfVar: vpc_cidr_block
  - name: cloud.vpc.worker.subnet.id
    fromTfVar: worker_subnet_id
  - name: cloud.vpc.worker.sg.id
    fromTfVar: worker_sg_id

  - name: kubernetes.flavor
  - name: kubernetes.api.endpoint
  - name: kubernetes.api.caCert
    kind: secret/certificate
  - name: kubernetes.api.token
    fromTfVar: token/base64
    kind: secret/token
  - name: kubernetes.eks.cluster

templates:
  files:
    - "*.template"
